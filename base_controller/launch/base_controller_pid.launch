<launch>

  <!-- 发布速度0 -->
  <!-- node pkg="base_controller" type="zero_vel_node" name="zero_vel_node" /-->  

  <!-- 发布速度给驱动器 -->
  <node pkg="base_controller" type="cmd_vel_node" name="cmd_vel_node" >
     <remap from="cmd_vel" to="yocs_cmd_vel_mux/safe/cmd_vel" />
  </node>

  <!-- 倒车充电时，后部超声波保护 -->
  <node pkg="base_controller" type="docking_safe_node" name="docking_safe_node" output="screen">
    <param name="safe_dist" value="0.27" type="double"/>
    <param name="kp" value="0.8" type="double"/>
    <param name="ki" value="0.0" type="double"/>
    <param name="kd" value="0.0" type="double"/>
    <param name="output_limit" value="0.3" type="double"/>
    <param name="integral_limit" value="0.3" type="double"/>
    <remap from="yocs_cmd_vel_mux/input/safe" to="yocs_cmd_vel_mux/input/remote"/>
  </node>

  <!-- 前超声波模块检测障碍物，及时停车 -->
  <node pkg="base_controller" type="forward_safe_node" name="cmd_safe_node">
    <param name="safe_dist" value="0.40" type="double"/>
  </node>
  
  <!-- 发布超声波数据 -->
  <node pkg="base_controller" type="sonar_filter_node" name="sonar_filter_node" />

  <!-- 发布激光雷达返回最小值 -->
  <node pkg="base_controller" type="laser_read" name="laser_read" />

  <!-- 发布里程计数据，作为EKF融合的输入 -->
  <node pkg="base_controller" type="can_receive_lpms_ekf" name="can_receive_lpms_ekf" />

  <!-- 检测ros是否正常运行，不正常运行则给电机设置0速度 -->
  <!-- node pkg="base_controller" type="ros_status" name="ros_status" /-->

  <!-- node pkg="base_controller" type="can_rev_handle" name="can_rev_handle" /-->

  <!-- 急停恢复 -->
  <node pkg="base_controller" type="emergency_stop_handle" name="emergency_stop_handle" >
     <param name="rate" value="50"/>
  </node>
</launch>
